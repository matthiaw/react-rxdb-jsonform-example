{
	"definitions": {
		"relation": {
			"type": "object",
			"oneOf": [
				{
					"title": "Skill-Relation",
					"description": "Relation of the role to a skilled person",
					"properties": {
						"person": {
							"type": "number",
							"title": "Person-ID",
							"description": "ID of person which has skill of role"
						},
						"skill": {
							"title": "Skill",
							"description": "Skill could be btw. 0-100%",
							"enum": [
								100,
								75,
								50,
								25,
								0
							]
						},
						"status": {
							"title": "Status",
							"description": "Status of skill-training, like wanted, trained, ...",
							"type": "string",
							"default": "untrained"
						},
						"comment": {
							"title": "Comment",
							"description": "Comment for skilles person to this role.",
							"type": "string"
						},
						"type": {
							"title": "Type",
							"description": "Type of relation is Skill-Level between person which takes the role.",
							"enum": [
								"skill"
							]
						}
					},
					"required": [
						"type",
						"skill",
						"person",
						"status"
					]
				},
				{
					"title": "RBS-Relation",
					"description": "Relation of the role-breakdown",
					"properties": {
						"parent": {
							"type": "number",
							"title": "Parent Role-ID",
							"description": "ID of parent role."
						},
						"comment": {
							"type": "string",
							"title": "Comment",
							"description": "Comment to relation."
						},
						"type": {
							"title": "Type",
							"description": "Relation-Type is RBS, which stands doe Role-Breakdown-Structure.",
							"enum": [
								"rbs"
							]
						}
					},
					"required": [
						"type",
						"parent"
					]
				}
			]
		}
	},
	"$schema": "http://json-schema.org/draft-06/schema#",
	"$id": "http://example.com/example.json",
	"type": "object",
	"properties": {
		"id": {
			"$id": "/properties/id",
			"type": "integer",
			"title": "Id of Role",
			"examples": [
				1
			]
		},
		"title": {
			"$id": "/properties/title",
			"type": "string",
			"description": "Title of the role"
		},
		"abbreviation": {
			"$id": "/properties/abbreviation",
			"type": "string",
			"title": "Abbreviation",
			"description": "Abbreviation of the role. Underlies RegEx-Rules, only capital letters and numbers allowed.",
			"pattern": "([A-Z]+[0-9]*)",
			"examples": [
				"S1"
			]
		},
		"relations": {
			"title": "Relations",
			"description": "Relations of the role",
			"type": "array",
			"items": {
				"$ref": "#/definitions/relation"
			}
		},
		"status": {
			"$id": "/properties/status",
			"type": "string",
			"enum": [
				"draft",
				"accepted",
				"deprecated",
				"closed"
			],
			"title": "Status",
			"examples": [
				"draft"
			]
		}
	},
	"required": [
		"id",
		"title",
		"abbreviation",
		"status"
	]
}
